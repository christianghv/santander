/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PeriodDetail;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PeriodInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-04-11T10:52:34.405704-05:00[America/Bogota]")
public class PeriodInfo {
  @SerializedName("current_period")
  private Integer currentPeriod = null;

  /**
   * Indicates the status of the period.   * &#x60;ACTIVE&#x60; -  Indicates that status for period is active in this moment.   * &#x60;INACTIVE&#x60; - Indicates that the period is inactive. 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    INACTIVE("INACTIVE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("period_detail")
  private List<PeriodDetail> periodDetail = null;

  public PeriodInfo currentPeriod(Integer currentPeriod) {
    this.currentPeriod = currentPeriod;
    return this;
  }

   /**
   * Indicates the current period number 
   * @return currentPeriod
  **/
  @Schema(example = "1", description = "Indicates the current period number ")
  public Integer getCurrentPeriod() {
    return currentPeriod;
  }

  public void setCurrentPeriod(Integer currentPeriod) {
    this.currentPeriod = currentPeriod;
  }

  public PeriodInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Indicates the status of the period.   * &#x60;ACTIVE&#x60; -  Indicates that status for period is active in this moment.   * &#x60;INACTIVE&#x60; - Indicates that the period is inactive. 
   * @return status
  **/
  @Schema(description = "Indicates the status of the period.   * `ACTIVE` -  Indicates that status for period is active in this moment.   * `INACTIVE` - Indicates that the period is inactive. ")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PeriodInfo periodDetail(List<PeriodDetail> periodDetail) {
    this.periodDetail = periodDetail;
    return this;
  }

  public PeriodInfo addPeriodDetailItem(PeriodDetail periodDetailItem) {
    if (this.periodDetail == null) {
      this.periodDetail = new ArrayList<PeriodDetail>();
    }
    this.periodDetail.add(periodDetailItem);
    return this;
  }

   /**
   * Card associated with the credit line.
   * @return periodDetail
  **/
  @Schema(description = "Card associated with the credit line.")
  public List<PeriodDetail> getPeriodDetail() {
    return periodDetail;
  }

  public void setPeriodDetail(List<PeriodDetail> periodDetail) {
    this.periodDetail = periodDetail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeriodInfo periodInfo = (PeriodInfo) o;
    return Objects.equals(this.currentPeriod, periodInfo.currentPeriod) &&
        Objects.equals(this.status, periodInfo.status) &&
        Objects.equals(this.periodDetail, periodInfo.periodDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentPeriod, status, periodDetail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeriodInfo {\n");
    
    sb.append("    currentPeriod: ").append(toIndentedString(currentPeriod)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    periodDetail: ").append(toIndentedString(periodDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
