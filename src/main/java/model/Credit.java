/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
/**
 * Basic information from the Credit Line.
 */
@Schema(description = "Basic information from the Credit Line.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-04-11T10:52:34.405704-05:00[America/Bogota]")
public class Credit {
  @SerializedName("key")
  private String key = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("alias")
  private String alias = null;

  @SerializedName("due_date")
  private OffsetDateTime dueDate = null;

  @SerializedName("statement_date")
  private OffsetDateTime statementDate = null;

  @SerializedName("rate")
  private BigDecimal rate = null;

  public Credit key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Credit line unique identifier.
   * @return key
  **/
  @Schema(example = "4e20fbb243684d9eb19ff33a50ee422e", required = true, description = "Credit line unique identifier.")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public Credit description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the credit line product.
   * @return description
  **/
  @Schema(example = "Aeromexico Blanca", required = true, description = "Description of the credit line product.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Credit alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Alias given by the customer. The Alias is used by the customer to easily identify their cards.
   * @return alias
  **/
  @Schema(example = "Tarjeta de Cr√©dito Aeromexico", required = true, description = "Alias given by the customer. The Alias is used by the customer to easily identify their cards.")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public Credit dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * This date specifies the last day for the monthly required payment. [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html
   * @return dueDate
  **/
  @Schema(example = "2019-02-16T23:38:45.408Z", required = true, description = "This date specifies the last day for the monthly required payment. [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html")
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public Credit statementDate(OffsetDateTime statementDate) {
    this.statementDate = statementDate;
    return this;
  }

   /**
   * This date specifies the last day of your billing cycle for your credit line.  [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html).
   * @return statementDate
  **/
  @Schema(example = "2017-02-05T17:32:28Z", required = true, description = "This date specifies the last day of your billing cycle for your credit line.  [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html).")
  public OffsetDateTime getStatementDate() {
    return statementDate;
  }

  public void setStatementDate(OffsetDateTime statementDate) {
    this.statementDate = statementDate;
  }

  public Credit rate(BigDecimal rate) {
    this.rate = rate;
    return this;
  }

   /**
   * Rate percentage to be charged.
   * @return rate
  **/
  @Schema(example = "52.22", required = true, description = "Rate percentage to be charged.")
  public BigDecimal getRate() {
    return rate;
  }

  public void setRate(BigDecimal rate) {
    this.rate = rate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Credit credit = (Credit) o;
    return Objects.equals(this.key, credit.key) &&
        Objects.equals(this.description, credit.description) &&
        Objects.equals(this.alias, credit.alias) &&
        Objects.equals(this.dueDate, credit.dueDate) &&
        Objects.equals(this.statementDate, credit.statementDate) &&
        Objects.equals(this.rate, credit.rate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, description, alias, dueDate, statementDate, rate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Credit {\n");
    
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    statementDate: ").append(toIndentedString(statementDate)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
