/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Contains the information of a transaction made by the customer
 */
@Schema(description = "Contains the information of a transaction made by the customer")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-04-11T10:52:34.405704-05:00[America/Bogota]")
public class Transaction {
  @SerializedName("key")
  private String key = null;

  @SerializedName("transaction_origin")
  private String transactionOrigin = null;

  @SerializedName("creation_date")
  private OffsetDateTime creationDate = null;

  @SerializedName("posted_date")
  private OffsetDateTime postedDate = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("balance")
  private AllOfTransactionBalance balance = null;

  @SerializedName("award_points_payment")
  private Boolean awardPointsPayment = null;

  public Transaction key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The transaction unique identifier.
   * @return key
  **/
  @Schema(example = "4e20fbb243684d9eb19ff33a50ee422e", description = "The transaction unique identifier.")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public Transaction transactionOrigin(String transactionOrigin) {
    this.transactionOrigin = transactionOrigin;
    return this;
  }

   /**
   * Origin  of the transaction, could be the business name where the transaction was made.
   * @return transactionOrigin
  **/
  @Schema(example = "Sanborns", description = "Origin  of the transaction, could be the business name where the transaction was made.")
  public String getTransactionOrigin() {
    return transactionOrigin;
  }

  public void setTransactionOrigin(String transactionOrigin) {
    this.transactionOrigin = transactionOrigin;
  }

  public Transaction creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Date when the transfer was made by the customer.  [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html).
   * @return creationDate
  **/
  @Schema(example = "2017-02-03T17:32:28Z", description = "Date when the transfer was made by the customer.  [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html).")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public Transaction postedDate(OffsetDateTime postedDate) {
    this.postedDate = postedDate;
    return this;
  }

   /**
   * Date when the transfer was posted. [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html).
   * @return postedDate
  **/
  @Schema(example = "2017-02-05T17:32:28Z", description = "Date when the transfer was posted. [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html).")
  public OffsetDateTime getPostedDate() {
    return postedDate;
  }

  public void setPostedDate(OffsetDateTime postedDate) {
    this.postedDate = postedDate;
  }

  public Transaction url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url for the transaction detail.
   * @return url
  **/
  @Schema(example = "/credits/{credit-key}/transactions/{transaction-key}", description = "Url for the transaction detail.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Transaction balance(AllOfTransactionBalance balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Retrieved the amount of the transaction. Expense or income symbol (+ in green / - in red).
   * @return balance
  **/
  @Schema(description = "Retrieved the amount of the transaction. Expense or income symbol (+ in green / - in red).")
  public AllOfTransactionBalance getBalance() {
    return balance;
  }

  public void setBalance(AllOfTransactionBalance balance) {
    this.balance = balance;
  }

  public Transaction awardPointsPayment(Boolean awardPointsPayment) {
    this.awardPointsPayment = awardPointsPayment;
    return this;
  }

   /**
   * Indicates whether this transaction can be paid off with your current award points
   * @return awardPointsPayment
  **/
  @Schema(example = "true", description = "Indicates whether this transaction can be paid off with your current award points")
  public Boolean isAwardPointsPayment() {
    return awardPointsPayment;
  }

  public void setAwardPointsPayment(Boolean awardPointsPayment) {
    this.awardPointsPayment = awardPointsPayment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.key, transaction.key) &&
        Objects.equals(this.transactionOrigin, transaction.transactionOrigin) &&
        Objects.equals(this.creationDate, transaction.creationDate) &&
        Objects.equals(this.postedDate, transaction.postedDate) &&
        Objects.equals(this.url, transaction.url) &&
        Objects.equals(this.balance, transaction.balance) &&
        Objects.equals(this.awardPointsPayment, transaction.awardPointsPayment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, transactionOrigin, creationDate, postedDate, url, balance, awardPointsPayment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    transactionOrigin: ").append(toIndentedString(transactionOrigin)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    postedDate: ").append(toIndentedString(postedDate)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    awardPointsPayment: ").append(toIndentedString(awardPointsPayment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
