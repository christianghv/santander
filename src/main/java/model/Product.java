/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Detailed product and subproduct codes and descriptions.
 */
@Schema(description = "Detailed product and subproduct codes and descriptions.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-04-11T10:52:34.405704-05:00[America/Bogota]")
public class Product {
  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("subproduct_code")
  private String subproductCode = null;

  @SerializedName("subproduct_name")
  private String subproductName = null;

  public Product code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Product code.
   * @return code
  **/
  @Schema(example = "001", description = "Product code.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Product name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Product name.
   * @return name
  **/
  @Schema(example = "CLASICA TRADICIONAL", description = "Product name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Product subproductCode(String subproductCode) {
    this.subproductCode = subproductCode;
    return this;
  }

   /**
   * Subproduct code.
   * @return subproductCode
  **/
  @Schema(example = "22", description = "Subproduct code.")
  public String getSubproductCode() {
    return subproductCode;
  }

  public void setSubproductCode(String subproductCode) {
    this.subproductCode = subproductCode;
  }

  public Product subproductName(String subproductName) {
    this.subproductName = subproductName;
    return this;
  }

   /**
   * Subproduct name.
   * @return subproductName
  **/
  @Schema(example = "AEROMEXICO", description = "Subproduct name.")
  public String getSubproductName() {
    return subproductName;
  }

  public void setSubproductName(String subproductName) {
    this.subproductName = subproductName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.code, product.code) &&
        Objects.equals(this.name, product.name) &&
        Objects.equals(this.subproductCode, product.subproductCode) &&
        Objects.equals(this.subproductName, product.subproductName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, name, subproductCode, subproductName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subproductCode: ").append(toIndentedString(subproductCode)).append("\n");
    sb.append("    subproductName: ").append(toIndentedString(subproductName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
