/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Indicates the type of the card.   * &#x60;DEBIT_CARD&#x60; -  Traditional debit card.   * &#x60;CREDIT_CARD&#x60; -  Traditional credit card.   * &#x60;DIGITAL_DEBIT_CARD&#x60; - Digital debit card.   * &#x60;DIGITAL_CREDIT_CARD&#x60; - Digital credit card.   * &#x60;INFOLESS_DEBIT_CARD&#x60; - Infoless debit card.   * &#x60;INFOLESS_CREDIT_CARD&#x60; - Infoless credit card. 
 */
@JsonAdapter(CardType.Adapter.class)
public enum CardType {
  DEBIT_CARD("DEBIT_CARD"),
  CREDIT_CARD("CREDIT_CARD"),
  DIGITAL_DEBIT_CARD("DIGITAL_DEBIT_CARD"),
  DIGITAL_CREDIT_CARD("DIGITAL_CREDIT_CARD"),
  INFOLESS_DEBIT_CARD("INFOLESS_DEBIT_CARD"),
  INFOLESS_CREDIT_CARD("INFOLESS_CREDIT_CARD");

  private String value;

  CardType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CardType fromValue(String input) {
    for (CardType b : CardType.values()) {
      if (b.value.equals(input)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CardType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CardType enumeration) throws IOException {
      jsonWriter.value(String.valueOf(enumeration.getValue()));
    }

    @Override
    public CardType read(final JsonReader jsonReader) throws IOException {
      Object value = jsonReader.nextString();
      return CardType.fromValue((String)(value));
    }
  }
}
