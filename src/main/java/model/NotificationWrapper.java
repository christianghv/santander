/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * NotificationWrapper
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-04-11T10:52:34.405704-05:00[America/Bogota]")
public class NotificationWrapper {
  /**
   * level:   * INFO - info   * WARNING - warning   * ERROR - error 
   */
  @JsonAdapter(LevelEnum.Adapter.class)
  public enum LevelEnum {
    INFO("INFO"),
    WARNING("WARNING"),
    ERROR("ERROR");

    private String value;

    LevelEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LevelEnum fromValue(String input) {
      for (LevelEnum b : LevelEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LevelEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public LevelEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return LevelEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("level")
  private LevelEnum level = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  public NotificationWrapper level(LevelEnum level) {
    this.level = level;
    return this;
  }

   /**
   * level:   * INFO - info   * WARNING - warning   * ERROR - error 
   * @return level
  **/
  @Schema(example = "WARNING", description = "level:   * INFO - info   * WARNING - warning   * ERROR - error ")
  public LevelEnum getLevel() {
    return level;
  }

  public void setLevel(LevelEnum level) {
    this.level = level;
  }

  public NotificationWrapper code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code to identify the notification and classify according the first character (E) Error ,(W) Warning,(I) Info.
   * @return code
  **/
  @Schema(example = "E422CDNPAYRCPTG001", description = "Code to identify the notification and classify according the first character (E) Error ,(W) Warning,(I) Info.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public NotificationWrapper message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Notification message  for display to the customer.
   * @return message
  **/
  @Schema(example = "Something happened.", description = "Notification message  for display to the customer.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public NotificationWrapper timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html)Date and time when the notification is done
   * @return timestamp
  **/
  @Schema(description = "[ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html)Date and time when the notification is done")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationWrapper notificationWrapper = (NotificationWrapper) o;
    return Objects.equals(this.level, notificationWrapper.level) &&
        Objects.equals(this.code, notificationWrapper.code) &&
        Objects.equals(this.message, notificationWrapper.message) &&
        Objects.equals(this.timestamp, notificationWrapper.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(level, code, message, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationWrapper {\n");
    
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
