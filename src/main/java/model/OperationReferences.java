/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OperationReferences
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-04-11T10:52:34.405704-05:00[America/Bogota]")
public class OperationReferences {
  /**
   * The reference type from the operations.   * &#x60;CHANNEL&#x60; -  The channel reference which is created with 9 digits randomly, it&#x27;s generated in background for every operation.   * &#x60;TRANSACTION&#x60; - The reference created by the core service.   * &#x60;TRACKING&#x60; -  The tracking reference which is created with 7 digits written by the user or created randomly in the SPEI transfer. 
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CHANNEL("CHANNEL"),
    TRANSACTION("TRANSACTION"),
    TRACKING("TRACKING");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("reference")
  private String reference = null;

  public OperationReferences type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The reference type from the operations.   * &#x60;CHANNEL&#x60; -  The channel reference which is created with 9 digits randomly, it&#x27;s generated in background for every operation.   * &#x60;TRANSACTION&#x60; - The reference created by the core service.   * &#x60;TRACKING&#x60; -  The tracking reference which is created with 7 digits written by the user or created randomly in the SPEI transfer. 
   * @return type
  **/
  @Schema(description = "The reference type from the operations.   * `CHANNEL` -  The channel reference which is created with 9 digits randomly, it's generated in background for every operation.   * `TRANSACTION` - The reference created by the core service.   * `TRACKING` -  The tracking reference which is created with 7 digits written by the user or created randomly in the SPEI transfer. ")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public OperationReferences description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the operation reference.
   * @return description
  **/
  @Schema(example = "Supermovil", description = "The description of the operation reference.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OperationReferences reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * The reference value from the operations.
   * @return reference
  **/
  @Schema(example = "123456789", description = "The reference value from the operations.")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OperationReferences operationReferences = (OperationReferences) o;
    return Objects.equals(this.type, operationReferences.type) &&
        Objects.equals(this.description, operationReferences.description) &&
        Objects.equals(this.reference, operationReferences.reference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, description, reference);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OperationReferences {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
